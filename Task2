package sample1;

import java.util.Scanner;

class BankAccount {
    private double balance;
    
    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }
    
    public synchronized void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println(Thread.currentThread().getName() + " deposited: " + amount + ", New Balance: " + balance);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }
    
    public synchronized void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println(Thread.currentThread().getName() + " withdrew: " + amount + ", New Balance: " + balance);
        } else {
            System.out.println("Insufficient funds or invalid withdrawal amount.");
        }
    }
    
    public double getBalance() {
        return balance;
    }
}

class BankingTask implements Runnable {
    private BankAccount account;
    private boolean isDeposit;
    private double amount;
    
    public BankingTask(BankAccount account, boolean isDeposit, double amount) {
        this.account = account;
        this.isDeposit = isDeposit;
        this.amount = amount;
    }
    
    @Override
    public void run() {
        if (isDeposit) {
            account.deposit(amount);
        } else {
            account.withdraw(amount);
        }
    }
}

public class BankApplication {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Banking Application");
        System.out.println();
        System.out.print("Enter initial balance: ");
        double initialBalance = sc.nextDouble();
        
        BankAccount account = new BankAccount(initialBalance);
        
        while (true) {
            System.out.println("\n1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();
            
            switch (choice) {
                case 1:
                case 2:
                    System.out.print("Enter amount: ");
                    double amount = sc.nextDouble();
                    boolean isDeposit = (choice == 1);
                    Thread transactionThread = new Thread(new BankingTask(account, isDeposit, amount));
                    transactionThread.start();
                    
                    try {
                        transactionThread.join();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    break;
                
                case 3:
                    System.out.println("Exited. Thanks for Using");
                    sc.close();
                    return;
                
                default:
                    System.out.println("Invalid choice. Please enter 1, 2, or 3.");
            }
        }
    }
}
